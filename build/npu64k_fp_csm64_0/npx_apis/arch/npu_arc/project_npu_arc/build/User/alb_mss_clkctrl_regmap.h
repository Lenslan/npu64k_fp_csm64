/*************************************************************************/
/**                                                                     **/
/** Copyright (C) 2016-2017 Synopsys, Inc.                              **/
/** All Rights Reserved.                                                **/
/**                                                                     **/
/** This Synopsys software and all associated documentation are         **/
/** proprietary to Synopsys, Inc. and may only be used pursuant to the  **/
/** terms and conditions of a written license agreement with Synopsys,  **/
/** Inc. All other use, reproduction, modification, or distribution of  **/
/** this Synopsys software or the associated documentation is strictly  **/
/** prohibited.                                                         **/
/**                                                                     **/
/*************************************************************************/


/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for Clock control 
 */
#ifndef  _alb_mss_clkctrl_regmap_H_
#define  _alb_mss_clkctrl_regmap_H_

#include "alb_mss_fab_system_memmap.h"
// Clock control registers
#define MSS_CLKCTRL_CFG_CTRL_ADDR            (MSS_CLKCTRL_0_BASE+0x0)
// clock divider registers
#define MSS_CLKCTRL_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0x4)
#define MSS_CLKCTRL_WDT_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0x8)
#define MSS_CLKCTRL_RTT_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0xc)
#define MSS_CLKCTRL_MSS_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0x10)
// clock enable ratio and status registers
// mbus_clk_en: rtt_clk <-> mss_clk; design rule: none (rtt_clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MBUS_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x14)
#define MSS_CLKCTRL_MBUS_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x18)
// mss_fab_mst0_clk_en: mss_clk <-> rtt_clk; design rule: none (mss_clk freq vs. rtt_clk freq)
#define MSS_CLKCTRL_MSS_FAB_MST0_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x1c)
#define MSS_CLKCTRL_MSS_FAB_MST0_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x20)
// mss_fab_mst1_clk_en: mss_clk <-> clk; design rule: none (mss_clk freq vs. clk freq)
#define MSS_CLKCTRL_MSS_FAB_MST1_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x24)
#define MSS_CLKCTRL_MSS_FAB_MST1_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x28)
// mss_fab_slv0_clk_en: mss_clk <-> mss_clk; design rule: none (mss_clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MSS_FAB_SLV0_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x2c)
#define MSS_CLKCTRL_MSS_FAB_SLV0_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x30)
// mss_fab_slv1_clk_en: mss_clk <-> clk; design rule: none (mss_clk freq vs. clk freq)
#define MSS_CLKCTRL_MSS_FAB_SLV1_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x34)
#define MSS_CLKCTRL_MSS_FAB_SLV1_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x38)
// mss_fab_slv2_clk_en: mss_clk <-> mss_clk; design rule: none (mss_clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MSS_FAB_SLV2_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x3c)
#define MSS_CLKCTRL_MSS_FAB_SLV2_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x40)
// lbus0_clk_en: clk <-> mss_clk; design rule: none (clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_LBUS0_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x44)
#define MSS_CLKCTRL_LBUS0_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x48)
// dbus_clk_en: clk <-> mss_clk; design rule: none (clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_DBUS_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x4c)
#define MSS_CLKCTRL_DBUS_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x50)
// lbus1_clk_en: clk <-> mss_clk; design rule: none (clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_LBUS1_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x54)
#define MSS_CLKCTRL_LBUS1_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x58)

#define MSS_CLKCTRL_NMI_COUNTER              (MSS_CLKCTRL_0_BASE+0x5c)

#endif
