/*
 * Copyright (C) 2021-2023 Synopsys, Inc. All rights reserved.
 *
 * SYNOPSYS CONFIDENTIAL - This is an unpublished, confidential, and
 * proprietary work of Synopsys, Inc., and may be subject to patent,
 * copyright, trade secret, and other legal or contractual protection.
 * This work may be used only pursuant to the terms and conditions of a
 * written license agreement with Synopsys, Inc. All other use, reproduction,
 * distribution, or disclosure of this work is strictly prohibited.
 *
 * The entire notice above must be reproduced on all authorized copies.
 */

// NPX core hierarchy
// vcs -sverilog -f ../../shared/RTL/npu_shared_manifest npu_cln_wrap.sv npu_cln_group.sv npu_cln_1p5.sv npu_stu_top.sv dummy_modules/npuarc_hs_cluster_top.sv npu_l2arc_group.sv npu_debug_port.v  npu_jtag_port.v  npu_tap_controller.v npu_core.sv



`include "npu_defines.v"
`include "arcsync_exported_defines.v"
`include "npu_macros.svh"

`include "npu_axi_macros.svh"
`include "npu_apb_macros.svh"



module npu_core_pd
  import npu_types::*;
(
  input  logic                          npu_core_clk,           // Main clock and reset
  input  logic                          nl2_rst_a,              // Configuration port clock and reset

  // per group clock enable, power-down and reset (at main clock)
  input  logic                          grp0_rst_a,
  input  logic                          grp0_clk_en_a,
  input  logic                          grp1_rst_a,
  input  logic                          grp1_clk_en_a,
  input  logic                          grp2_rst_a,
  input  logic                          grp2_clk_en_a,
  input  logic                          grp3_rst_a,
  input  logic                          grp3_clk_en_a,
  output logic [64-1: 0]            npu_grp0_vmid,
  output logic [64-1: 0]            npu_grp1_vmid,
  output logic [64-1: 0]            npu_grp2_vmid,
  output logic [64-1: 0]            npu_grp3_vmid,
  input  logic                         nl2arc0_rst_a,
  input  logic                         nl2arc0_clk_en_a,
  output logic                         nl2arc0_evt_vm_irq,
  input  logic                         nl2arc0_pwr_dwn_a,

  input  logic                         nl2arc1_rst_a,
  input  logic                         nl2arc1_clk_en_a,
  output logic                         nl2arc1_evt_vm_irq,
  input  logic                         nl2arc1_pwr_dwn_a,
  input  logic                         ext_irq0_a, // From user-defined IRQ sources
  input  logic                         ext_irq1_a, // From user-defined IRQ sources

  // per slice power-down and reset
  input  logic                         sl0nl1arc_pwr_dwn_a,
  input  logic                         sl1nl1arc_pwr_dwn_a,
  input  logic                         sl2nl1arc_pwr_dwn_a,
  input  logic                         sl3nl1arc_pwr_dwn_a,
  input  logic                         sl4nl1arc_pwr_dwn_a,
  input  logic                         sl5nl1arc_pwr_dwn_a,
  input  logic                         sl6nl1arc_pwr_dwn_a,
  input  logic                         sl7nl1arc_pwr_dwn_a,
  input  logic                         sl8nl1arc_pwr_dwn_a,
  input  logic                         sl9nl1arc_pwr_dwn_a,
  input  logic                         sl10nl1arc_pwr_dwn_a,
  input  logic                         sl11nl1arc_pwr_dwn_a,
  input  logic                         sl12nl1arc_pwr_dwn_a,
  input  logic                         sl13nl1arc_pwr_dwn_a,
  input  logic                         sl14nl1arc_pwr_dwn_a,
  input  logic                         sl15nl1arc_pwr_dwn_a,
  output logic [`NPU_STU_CHAN_NUM-1:0] stu_err_irq_a,

  // power domain
  // -l2arc
  input logic                       nl2arc_isolate_n,   // Isolate control signal for power domain of component (active low)
  input logic                       nl2arc_isolate,     // Isolate control signal for power domain of component (active high)
  input logic                       nl2arc_pd_mem,      // Power down of power domain memories (SRAM)
  input logic                       nl2arc_pd_logic,    // Power down of power domain logics
    // NPU Group Power status
  input logic                       grp0_isolate_n,   // Isolate control signal for power domain of component (active low)
  input logic                       grp0_isolate,     // Isolate control signal for power domain of component (active high)
  input logic                       grp0_pd_mem,      // Power down of power domain memories (SRAM)            
  input logic                       grp0_pd_logic,    // Power down of power domain logics                     
  // NPU Group Power status
  input logic                       grp1_isolate_n,   // Isolate control signal for power domain of component (active low)
  input logic                       grp1_isolate,     // Isolate control signal for power domain of component (active high)
  input logic                       grp1_pd_mem,      // Power down of power domain memories (SRAM)            
  input logic                       grp1_pd_logic,    // Power down of power domain logics                     
  // NPU Group Power status
  input logic                       grp2_isolate_n,   // Isolate control signal for power domain of component (active low)
  input logic                       grp2_isolate,     // Isolate control signal for power domain of component (active high)
  input logic                       grp2_pd_mem,      // Power down of power domain memories (SRAM)            
  input logic                       grp2_pd_logic,    // Power down of power domain logics                     
  // NPU Group Power status
  input logic                       grp3_isolate_n,   // Isolate control signal for power domain of component (active low)
  input logic                       grp3_isolate,     // Isolate control signal for power domain of component (active high)
  input logic                       grp3_pd_mem,      // Power down of power domain memories (SRAM)            
  input logic                       grp3_pd_logic,    // Power down of power domain logics                     
  input  logic                         grp0_pwr_dwn_a,
  input  logic                         grp1_pwr_dwn_a,
  input  logic                         grp2_pwr_dwn_a,
  input  logic                         grp3_pwr_dwn_a,

  // NoC master interfaces
  output logic                                                                                                        l2arc_noc_axi_gals_clk_req,
  output logic [5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                l2arc_noc_axi_gals_aw_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              l2arc_noc_axi_gals_aw_rdpnt,
  output logic [1:0]                                                                                       l2arc_noc_axi_gals_aw_wpnt,
  input  logic [1:0]                                                                                       l2arc_noc_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_DMA_WUW:0]                                                           l2arc_noc_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      l2arc_noc_axi_gals_w_rdpnt,
  output logic [3:0]                                                                                        l2arc_noc_axi_gals_w_wpnt,
  input  logic [3:0]                                                                                        l2arc_noc_axi_gals_w_rpnt_a,
  input  logic [5+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                l2arc_noc_axi_gals_b_data,
  output logic [`NUM_FLANES(5+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               l2arc_noc_axi_gals_b_rdpnt,
  input  logic [1:0]                                                                                        l2arc_noc_axi_gals_b_wpnt_a,
  output logic [1:0]                                                                                        l2arc_noc_axi_gals_b_rpnt,
  output logic [5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                l2arc_noc_axi_gals_ar_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              l2arc_noc_axi_gals_ar_rdpnt,
  output logic [1:0]                                                                                       l2arc_noc_axi_gals_ar_wpnt,
  input  logic [1:0]                                                                                       l2arc_noc_axi_gals_ar_rpnt_a,
  input  logic [5+64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      l2arc_noc_axi_gals_r_data,
  output logic [`NUM_FLANES(5+64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] l2arc_noc_axi_gals_r_rdpnt,
  input  logic [3:0]                                                                                        l2arc_noc_axi_gals_r_wpnt_a,
  output logic [3:0]                                                                                        l2arc_noc_axi_gals_r_rpnt,

  output logic                                                                                                        npu_grp0_noc_axi_gals_clk_req,
  output logic [5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp0_noc_axi_gals_aw_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp0_noc_axi_gals_aw_rdpnt,
  output logic [1:0]                                                                                       npu_grp0_noc_axi_gals_aw_wpnt,
  input  logic [1:0]                                                                                       npu_grp0_noc_axi_gals_aw_rpnt_a,
  output logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           npu_grp0_noc_axi_gals_w_data,
  input  logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      npu_grp0_noc_axi_gals_w_rdpnt,
  output logic [3:0]                                                                                        npu_grp0_noc_axi_gals_w_wpnt,
  input  logic [3:0]                                                                                        npu_grp0_noc_axi_gals_w_rpnt_a,
  input  logic [5+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                npu_grp0_noc_axi_gals_b_data,
  output logic [`NUM_FLANES(5+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               npu_grp0_noc_axi_gals_b_rdpnt,
  input  logic [1:0]                                                                                        npu_grp0_noc_axi_gals_b_wpnt_a,
  output logic [1:0]                                                                                        npu_grp0_noc_axi_gals_b_rpnt,
  output logic [5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp0_noc_axi_gals_ar_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp0_noc_axi_gals_ar_rdpnt,
  output logic [1:0]                                                                                       npu_grp0_noc_axi_gals_ar_wpnt,
  input  logic [1:0]                                                                                       npu_grp0_noc_axi_gals_ar_rpnt_a,
  input  logic [5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      npu_grp0_noc_axi_gals_r_data,
  output logic [`NUM_FLANES(5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] npu_grp0_noc_axi_gals_r_rdpnt,
  input  logic [3:0]                                                                                        npu_grp0_noc_axi_gals_r_wpnt_a,
  output logic [3:0]                                                                                        npu_grp0_noc_axi_gals_r_rpnt,
  output logic                                                                                                        npu_grp1_noc_axi_gals_clk_req,
  output logic [5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp1_noc_axi_gals_aw_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp1_noc_axi_gals_aw_rdpnt,
  output logic [1:0]                                                                                       npu_grp1_noc_axi_gals_aw_wpnt,
  input  logic [1:0]                                                                                       npu_grp1_noc_axi_gals_aw_rpnt_a,
  output logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           npu_grp1_noc_axi_gals_w_data,
  input  logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      npu_grp1_noc_axi_gals_w_rdpnt,
  output logic [3:0]                                                                                        npu_grp1_noc_axi_gals_w_wpnt,
  input  logic [3:0]                                                                                        npu_grp1_noc_axi_gals_w_rpnt_a,
  input  logic [5+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                npu_grp1_noc_axi_gals_b_data,
  output logic [`NUM_FLANES(5+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               npu_grp1_noc_axi_gals_b_rdpnt,
  input  logic [1:0]                                                                                        npu_grp1_noc_axi_gals_b_wpnt_a,
  output logic [1:0]                                                                                        npu_grp1_noc_axi_gals_b_rpnt,
  output logic [5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp1_noc_axi_gals_ar_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp1_noc_axi_gals_ar_rdpnt,
  output logic [1:0]                                                                                       npu_grp1_noc_axi_gals_ar_wpnt,
  input  logic [1:0]                                                                                       npu_grp1_noc_axi_gals_ar_rpnt_a,
  input  logic [5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      npu_grp1_noc_axi_gals_r_data,
  output logic [`NUM_FLANES(5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] npu_grp1_noc_axi_gals_r_rdpnt,
  input  logic [3:0]                                                                                        npu_grp1_noc_axi_gals_r_wpnt_a,
  output logic [3:0]                                                                                        npu_grp1_noc_axi_gals_r_rpnt,
  output logic                                                                                                        npu_grp2_noc_axi_gals_clk_req,
  output logic [5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp2_noc_axi_gals_aw_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp2_noc_axi_gals_aw_rdpnt,
  output logic [1:0]                                                                                       npu_grp2_noc_axi_gals_aw_wpnt,
  input  logic [1:0]                                                                                       npu_grp2_noc_axi_gals_aw_rpnt_a,
  output logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           npu_grp2_noc_axi_gals_w_data,
  input  logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      npu_grp2_noc_axi_gals_w_rdpnt,
  output logic [3:0]                                                                                        npu_grp2_noc_axi_gals_w_wpnt,
  input  logic [3:0]                                                                                        npu_grp2_noc_axi_gals_w_rpnt_a,
  input  logic [5+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                npu_grp2_noc_axi_gals_b_data,
  output logic [`NUM_FLANES(5+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               npu_grp2_noc_axi_gals_b_rdpnt,
  input  logic [1:0]                                                                                        npu_grp2_noc_axi_gals_b_wpnt_a,
  output logic [1:0]                                                                                        npu_grp2_noc_axi_gals_b_rpnt,
  output logic [5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp2_noc_axi_gals_ar_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp2_noc_axi_gals_ar_rdpnt,
  output logic [1:0]                                                                                       npu_grp2_noc_axi_gals_ar_wpnt,
  input  logic [1:0]                                                                                       npu_grp2_noc_axi_gals_ar_rpnt_a,
  input  logic [5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      npu_grp2_noc_axi_gals_r_data,
  output logic [`NUM_FLANES(5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] npu_grp2_noc_axi_gals_r_rdpnt,
  input  logic [3:0]                                                                                        npu_grp2_noc_axi_gals_r_wpnt_a,
  output logic [3:0]                                                                                        npu_grp2_noc_axi_gals_r_rpnt,
  output logic                                                                                                        npu_grp3_noc_axi_gals_clk_req,
  output logic [5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp3_noc_axi_gals_aw_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp3_noc_axi_gals_aw_rdpnt,
  output logic [1:0]                                                                                       npu_grp3_noc_axi_gals_aw_wpnt,
  input  logic [1:0]                                                                                       npu_grp3_noc_axi_gals_aw_rpnt_a,
  output logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           npu_grp3_noc_axi_gals_w_data,
  input  logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      npu_grp3_noc_axi_gals_w_rdpnt,
  output logic [3:0]                                                                                        npu_grp3_noc_axi_gals_w_wpnt,
  input  logic [3:0]                                                                                        npu_grp3_noc_axi_gals_w_rpnt_a,
  input  logic [5+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                npu_grp3_noc_axi_gals_b_data,
  output logic [`NUM_FLANES(5+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               npu_grp3_noc_axi_gals_b_rdpnt,
  input  logic [1:0]                                                                                        npu_grp3_noc_axi_gals_b_wpnt_a,
  output logic [1:0]                                                                                        npu_grp3_noc_axi_gals_b_rpnt,
  output logic [5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                npu_grp3_noc_axi_gals_ar_data,
  input  logic [`NUM_FLANES(5+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              npu_grp3_noc_axi_gals_ar_rdpnt,
  output logic [1:0]                                                                                       npu_grp3_noc_axi_gals_ar_wpnt,
  input  logic [1:0]                                                                                       npu_grp3_noc_axi_gals_ar_rpnt_a,
  input  logic [5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      npu_grp3_noc_axi_gals_r_data,
  output logic [`NUM_FLANES(5+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] npu_grp3_noc_axi_gals_r_rdpnt,
  input  logic [3:0]                                                                                        npu_grp3_noc_axi_gals_r_wpnt_a,
  output logic [3:0]                                                                                        npu_grp3_noc_axi_gals_r_rpnt,

  // DMI slave interfaces
  input  logic                                                                                                        dmi0_axi_gals_clk_req_a,
  input  logic [16+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                dmi0_axi_gals_aw_data,
  output logic [`NUM_FLANES(16+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              dmi0_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       dmi0_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       dmi0_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           dmi0_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      dmi0_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        dmi0_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        dmi0_axi_gals_w_rpnt,
  output logic [16+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                dmi0_axi_gals_b_data,
  input  logic [`NUM_FLANES(16+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               dmi0_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        dmi0_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        dmi0_axi_gals_b_rpnt_a,
  input  logic [16+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                dmi0_axi_gals_ar_data,
  output logic [`NUM_FLANES(16+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              dmi0_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       dmi0_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       dmi0_axi_gals_ar_rpnt,
  output logic [16+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      dmi0_axi_gals_r_data,
  input  logic [`NUM_FLANES(16+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] dmi0_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        dmi0_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        dmi0_axi_gals_r_rpnt_a,

  // configuration slave AXI
  input  logic                                                                                                        cfg_axi_gals_clk_req_a,
  input  logic [16+1+$bits(npu_axi_cmd_t)-1:0]                                                cfg_axi_gals_aw_data,
  output logic [`NUM_FLANES(16+1+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              cfg_axi_gals_aw_rdpnt,
  input  logic [0:0]                                                                                       cfg_axi_gals_aw_wpnt_a,
  output logic [0:0]                                                                                       cfg_axi_gals_aw_rpnt,
  input  logic [32+32/8+1:0]                                                           cfg_axi_gals_w_data,
  output logic [`NUM_FLANES(32+32/8+1+1)-1:0][(1<<0)-1:0]                      cfg_axi_gals_w_rdpnt,
  input  logic [0:0]                                                                                        cfg_axi_gals_w_wpnt_a,
  output logic [0:0]                                                                                        cfg_axi_gals_w_rpnt,
  output logic [16+1+$bits(npu_axi_resp_t)-1:0]                                                cfg_axi_gals_b_data,
  input  logic [`NUM_FLANES(16+1+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               cfg_axi_gals_b_rdpnt,
  output logic [0:0]                                                                                        cfg_axi_gals_b_wpnt,
  input  logic [0:0]                                                                                        cfg_axi_gals_b_rpnt_a,
  input  logic [16+1+$bits(npu_axi_cmd_t)-1:0]                                                cfg_axi_gals_ar_data,
  output logic [`NUM_FLANES(16+1+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              cfg_axi_gals_ar_rdpnt,
  input  logic [0:0]                                                                                       cfg_axi_gals_ar_wpnt_a,
  output logic [0:0]                                                                                       cfg_axi_gals_ar_rpnt,
  output logic [16+32+$bits(npu_axi_resp_t)+1:0]                                      cfg_axi_gals_r_data,
  input  logic [`NUM_FLANES(16+32+$bits(npu_axi_resp_t)+1+1)-1:0][(1<<0)-1:0] cfg_axi_gals_r_rdpnt,
  output logic [0:0]                                                                                        cfg_axi_gals_r_wpnt,
  input  logic [0:0]                                                                                        cfg_axi_gals_r_rpnt_a,

  // Slice interfaces
  input  logic                                                                                                        sl0nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl0nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl0nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl0nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl0nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl0nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl0nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl0nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl0nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl0nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl0nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl0nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl0nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl0nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl0nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl0nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl0nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl0nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl0nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl0nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl0nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl0nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl0nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl0nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl0nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl0nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl0nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl0nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl0nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl0nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl0nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl0nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl0nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl0nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl0nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl0nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl0nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl0nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl0nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl0nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl0nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl0nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl1nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl1nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl1nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl1nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl1nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl1nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl1nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl1nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl1nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl1nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl1nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl1nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl1nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl1nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl1nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl1nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl1nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl1nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl1nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl1nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl1nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl1nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl1nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl1nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl1nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl1nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl1nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl1nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl1nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl1nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl1nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl1nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl1nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl1nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl1nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl1nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl1nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl1nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl1nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl1nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl1nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl1nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl2nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl2nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl2nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl2nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl2nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl2nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl2nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl2nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl2nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl2nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl2nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl2nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl2nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl2nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl2nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl2nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl2nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl2nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl2nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl2nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl2nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl2nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl2nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl2nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl2nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl2nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl2nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl2nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl2nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl2nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl2nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl2nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl2nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl2nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl2nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl2nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl2nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl2nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl2nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl2nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl2nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl2nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl3nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl3nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl3nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl3nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl3nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl3nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl3nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl3nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl3nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl3nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl3nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl3nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl3nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl3nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl3nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl3nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl3nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl3nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl3nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl3nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl3nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl3nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl3nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl3nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl3nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl3nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl3nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl3nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl3nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl3nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl3nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl3nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl3nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl3nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl3nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl3nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl3nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl3nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl3nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl3nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl3nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl3nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl4nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl4nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl4nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl4nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl4nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl4nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl4nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl4nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl4nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl4nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl4nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl4nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl4nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl4nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl4nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl4nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl4nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl4nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl4nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl4nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl4nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl4nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl4nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl4nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl4nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl4nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl4nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl4nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl4nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl4nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl4nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl4nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl4nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl4nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl4nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl4nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl4nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl4nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl4nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl4nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl4nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl4nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl5nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl5nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl5nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl5nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl5nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl5nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl5nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl5nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl5nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl5nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl5nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl5nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl5nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl5nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl5nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl5nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl5nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl5nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl5nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl5nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl5nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl5nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl5nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl5nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl5nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl5nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl5nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl5nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl5nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl5nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl5nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl5nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl5nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl5nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl5nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl5nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl5nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl5nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl5nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl5nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl5nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl5nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl6nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl6nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl6nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl6nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl6nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl6nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl6nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl6nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl6nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl6nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl6nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl6nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl6nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl6nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl6nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl6nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl6nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl6nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl6nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl6nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl6nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl6nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl6nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl6nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl6nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl6nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl6nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl6nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl6nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl6nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl6nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl6nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl6nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl6nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl6nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl6nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl6nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl6nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl6nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl6nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl6nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl6nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl7nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl7nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl7nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl7nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl7nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl7nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl7nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl7nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl7nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl7nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl7nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl7nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl7nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl7nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl7nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl7nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl7nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl7nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl7nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl7nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl7nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl7nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl7nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl7nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl7nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl7nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl7nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl7nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl7nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl7nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl7nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl7nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl7nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl7nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl7nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl7nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl7nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl7nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl7nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl7nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl7nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl7nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl8nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl8nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl8nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl8nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl8nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl8nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl8nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl8nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl8nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl8nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl8nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl8nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl8nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl8nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl8nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl8nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl8nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl8nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl8nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl8nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl8nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl8nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl8nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl8nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl8nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl8nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl8nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl8nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl8nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl8nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl8nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl8nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl8nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl8nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl8nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl8nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl8nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl8nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl8nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl8nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl8nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl8nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl9nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl9nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl9nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl9nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl9nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl9nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl9nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl9nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl9nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl9nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl9nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl9nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl9nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl9nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl9nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl9nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl9nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl9nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl9nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl9nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl9nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl9nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl9nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl9nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl9nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl9nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl9nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl9nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl9nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl9nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl9nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl9nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl9nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl9nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl9nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl9nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl9nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl9nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl9nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl9nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl9nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl9nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl10nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl10nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl10nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl10nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl10nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl10nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl10nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl10nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl10nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl10nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl10nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl10nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl10nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl10nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl10nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl10nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl10nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl10nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl10nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl10nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl10nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl10nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl10nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl10nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl10nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl10nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl10nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl10nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl10nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl10nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl10nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl10nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl10nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl10nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl10nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl10nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl10nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl10nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl10nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl10nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl10nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl10nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl11nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl11nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl11nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl11nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl11nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl11nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl11nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl11nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl11nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl11nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl11nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl11nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl11nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl11nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl11nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl11nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl11nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl11nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl11nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl11nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl11nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl11nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl11nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl11nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl11nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl11nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl11nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl11nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl11nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl11nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl11nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl11nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl11nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl11nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl11nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl11nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl11nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl11nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl11nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl11nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl11nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl11nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl12nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl12nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl12nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl12nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl12nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl12nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl12nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl12nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl12nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl12nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl12nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl12nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl12nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl12nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl12nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl12nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl12nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl12nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl12nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl12nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl12nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl12nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl12nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl12nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl12nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl12nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl12nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl12nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl12nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl12nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl12nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl12nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl12nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl12nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl12nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl12nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl12nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl12nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl12nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl12nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl12nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl12nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl13nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl13nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl13nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl13nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl13nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl13nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl13nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl13nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl13nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl13nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl13nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl13nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl13nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl13nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl13nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl13nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl13nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl13nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl13nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl13nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl13nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl13nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl13nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl13nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl13nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl13nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl13nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl13nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl13nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl13nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl13nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl13nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl13nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl13nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl13nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl13nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl13nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl13nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl13nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl13nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl13nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl13nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl14nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl14nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl14nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl14nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl14nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl14nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl14nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl14nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl14nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl14nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl14nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl14nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl14nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl14nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl14nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl14nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl14nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl14nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl14nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl14nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl14nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl14nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl14nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl14nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl14nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl14nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl14nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl14nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl14nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl14nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl14nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl14nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl14nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl14nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl14nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl14nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl14nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl14nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl14nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl14nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl14nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl14nl1arc_ccm_axi_gals_r_rpnt,


  input  logic                                                                                                        sl15nl1arc_dev_axi_gals_clk_req_a,
  input  logic [1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl15nl1arc_dev_axi_gals_aw_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl15nl1arc_dev_axi_gals_aw_rdpnt,
  input  logic [1:0]                                                                                       sl15nl1arc_dev_axi_gals_aw_wpnt_a,
  output logic [1:0]                                                                                       sl15nl1arc_dev_axi_gals_aw_rpnt,
  input  logic [VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW:0]                                                           sl15nl1arc_dev_axi_gals_w_data,
  output logic [`NUM_FLANES(VSIZE*64+VSIZE*64/8+SLICE_DMA_WUW+1)-1:0][(1<<3)-1:0]                      sl15nl1arc_dev_axi_gals_w_rdpnt,
  input  logic [3:0]                                                                                        sl15nl1arc_dev_axi_gals_w_wpnt_a,
  output logic [3:0]                                                                                        sl15nl1arc_dev_axi_gals_w_rpnt,
  output logic [1+SLICE_DMA_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl15nl1arc_dev_axi_gals_b_data,
  input  logic [`NUM_FLANES(1+SLICE_DMA_BUW+$bits(npu_axi_resp_t))-1:0][(1<<1)-1:0]               sl15nl1arc_dev_axi_gals_b_rdpnt,
  output logic [1:0]                                                                                        sl15nl1arc_dev_axi_gals_b_wpnt,
  input  logic [1:0]                                                                                        sl15nl1arc_dev_axi_gals_b_rpnt_a,
  input  logic [1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl15nl1arc_dev_axi_gals_ar_data,
  output logic [`NUM_FLANES(1+SLICE_DMA_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<1)-1:0]              sl15nl1arc_dev_axi_gals_ar_rdpnt,
  input  logic [1:0]                                                                                       sl15nl1arc_dev_axi_gals_ar_wpnt_a,
  output logic [1:0]                                                                                       sl15nl1arc_dev_axi_gals_ar_rpnt,
  output logic [1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW:0]                                      sl15nl1arc_dev_axi_gals_r_data,
  input  logic [`NUM_FLANES(1+VSIZE*64+$bits(npu_axi_resp_t)+SLICE_DMA_RUW+1)-1:0][(1<<3)-1:0] sl15nl1arc_dev_axi_gals_r_rdpnt,
  output logic [3:0]                                                                                        sl15nl1arc_dev_axi_gals_r_wpnt,
  input  logic [3:0]                                                                                        sl15nl1arc_dev_axi_gals_r_rpnt_a,
  output logic                                                                                                        sl15nl1arc_ccm_axi_gals_clk_req,
  output logic [1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t)-1:0]                                                sl15nl1arc_ccm_axi_gals_aw_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_AWUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl15nl1arc_ccm_axi_gals_aw_rdpnt,
  output logic [0:0]                                                                                       sl15nl1arc_ccm_axi_gals_aw_wpnt,
  input  logic [0:0]                                                                                       sl15nl1arc_ccm_axi_gals_aw_rpnt_a,
  output logic [64+64/8+SLICE_MMIO_WUW:0]                                                           sl15nl1arc_ccm_axi_gals_w_data,
  input  logic [`NUM_FLANES(64+64/8+SLICE_MMIO_WUW+1)-1:0][(1<<1)-1:0]                      sl15nl1arc_ccm_axi_gals_w_rdpnt,
  output logic [1:0]                                                                                        sl15nl1arc_ccm_axi_gals_w_wpnt,
  input  logic [1:0]                                                                                        sl15nl1arc_ccm_axi_gals_w_rpnt_a,
  input  logic [1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t)-1:0]                                                sl15nl1arc_ccm_axi_gals_b_data,
  output logic [`NUM_FLANES(1+SLICE_MMIO_BUW+$bits(npu_axi_resp_t))-1:0][(1<<0)-1:0]               sl15nl1arc_ccm_axi_gals_b_rdpnt,
  input  logic [0:0]                                                                                        sl15nl1arc_ccm_axi_gals_b_wpnt_a,
  output logic [0:0]                                                                                        sl15nl1arc_ccm_axi_gals_b_rpnt,
  output logic [1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t)-1:0]                                                sl15nl1arc_ccm_axi_gals_ar_data,
  input  logic [`NUM_FLANES(1+SLICE_MMIO_ARUW+$bits(npu_axi_cmd_t))-1:0][(1<<0)-1:0]              sl15nl1arc_ccm_axi_gals_ar_rdpnt,
  output logic [0:0]                                                                                       sl15nl1arc_ccm_axi_gals_ar_wpnt,
  input  logic [0:0]                                                                                       sl15nl1arc_ccm_axi_gals_ar_rpnt_a,
  input  logic [1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW:0]                                      sl15nl1arc_ccm_axi_gals_r_data,
  output logic [`NUM_FLANES(1+64+$bits(npu_axi_resp_t)+SLICE_MMIO_RUW+1)-1:0][(1<<1)-1:0] sl15nl1arc_ccm_axi_gals_r_rdpnt,
  input  logic [1:0]                                                                                        sl15nl1arc_ccm_axi_gals_r_wpnt_a,
  output logic [1:0]                                                                                        sl15nl1arc_ccm_axi_gals_r_rpnt,



  // L2 ARC0 debug interface
  input      logic                          nl2arc0_dbg_cmdval_a,
  input      logic [36:0]                   nl2arc0_dbg_pack_a,
  output     logic [31:0]                   nl2arc0_dbg_resp,
  // L2 ARC1 debug interface
  input      logic                          nl2arc1_dbg_cmdval_a,
  input      logic [36:0]                   nl2arc1_dbg_pack_a,
  output     logic [31:0]                   nl2arc1_dbg_resp,

  // L2 ARC0 signals
  input      logic [7:0]                    nl2arc0_arcnum,
  input      logic [21:0]                   nl2arc0_intvbase_in,      //Boot
  input      logic                          nl2arc0_arc_halt_req_a,   //Halt
  output     logic                          nl2arc0_arc_halt_ack,
  input      logic                          nl2arc0_arc_run_req_a,    //Run
  output     logic                          nl2arc0_arc_run_ack,
  output     logic                          nl2arc0_sys_sleep_r,      //Status
  output     logic [2:0]                    nl2arc0_sys_sleep_mode_r,
  output     logic                          nl2arc0_sys_halt_r,
  output     logic                          nl2arc0_sys_tf_halt_r,
  input      logic [17:0]    nl2arc0_arc_irq_a,
  input      logic [17:0]    nl2arc0_arc_event_a,
  // L2 ARC1 signals
  input      logic [7:0]                    nl2arc1_arcnum,
  input      logic [21:0]                   nl2arc1_intvbase_in,      //Boot
  input      logic                          nl2arc1_arc_halt_req_a,   //Halt
  output     logic                          nl2arc1_arc_halt_ack,
  input      logic                          nl2arc1_arc_run_req_a,    //Run
  output     logic                          nl2arc1_arc_run_ack,
  output     logic                          nl2arc1_sys_sleep_r,      //Status
  output     logic [2:0]                    nl2arc1_sys_sleep_mode_r,
  output     logic                          nl2arc1_sys_halt_r,
  output     logic                          nl2arc1_sys_tf_halt_r,
  input      logic [17:0]    nl2arc1_arc_irq_a,
  input      logic [17:0]    nl2arc1_arc_event_a,
  input      logic [`NPU_SLICE_NUM-1:0][1:0] l1_to_l2_event,
  output     logic [`NPU_SLICE_NUM-1:0][1:0] l2_to_l1_event,
  input      logic [NPU_AXI_ADDR_W-1:24]     npu_csm_base,
  input      logic                          grp0_evt_vm_irq,
  input      logic                          grp1_evt_vm_irq,
  input      logic                          grp2_evt_vm_irq,
  input      logic                          grp3_evt_vm_irq,
   input      logic                          grp4_rtt_swe_val,
   input      logic [32:0]                   grp4_rtt_swe_data,
   input      logic [7:0]                    grp4_rtt_swe_ext,
   output     logic                          grp4_rtt_swe_prdcr_en,
   input      logic                          grp5_rtt_swe_val,
   input      logic [32:0]                   grp5_rtt_swe_data,
   input      logic [7:0]                    grp5_rtt_swe_ext,
   output     logic                          grp5_rtt_swe_prdcr_en,
   input      logic                          grp6_rtt_swe_val,
   input      logic [32:0]                   grp6_rtt_swe_data,
   input      logic [7:0]                    grp6_rtt_swe_ext,
   output     logic                          grp6_rtt_swe_prdcr_en,
   input      logic                          grp7_rtt_swe_val,
   input      logic [32:0]                   grp7_rtt_swe_data,
   input      logic [7:0]                    grp7_rtt_swe_ext,
   output     logic                          grp7_rtt_swe_prdcr_en,
   input      logic                          grp8_rtt_swe_val,
   input      logic [32:0]                   grp8_rtt_swe_data,
   input      logic [7:0]                    grp8_rtt_swe_ext,
   output     logic                          grp8_rtt_swe_prdcr_en,
   input      logic                          grp9_rtt_swe_val,
   input      logic [32:0]                   grp9_rtt_swe_data,
   input      logic [7:0]                    grp9_rtt_swe_ext,
   output     logic                          grp9_rtt_swe_prdcr_en,
   input      logic                          grp10_rtt_swe_val,
   input      logic [32:0]                   grp10_rtt_swe_data,
   input      logic [7:0]                    grp10_rtt_swe_ext,
   output     logic                          grp10_rtt_swe_prdcr_en,
   input      logic                          grp11_rtt_swe_val,
   input      logic [32:0]                   grp11_rtt_swe_data,
   input      logic [7:0]                    grp11_rtt_swe_ext,
   output     logic                          grp11_rtt_swe_prdcr_en,
   input      logic                          grp12_rtt_swe_val,
   input      logic [32:0]                   grp12_rtt_swe_data,
   input      logic [7:0]                    grp12_rtt_swe_ext,
   output     logic                          grp12_rtt_swe_prdcr_en,
   input      logic                          grp13_rtt_swe_val,
   input      logic [32:0]                   grp13_rtt_swe_data,
   input      logic [7:0]                    grp13_rtt_swe_ext,
   output     logic                          grp13_rtt_swe_prdcr_en,
   input      logic                          grp14_rtt_swe_val,
   input      logic [32:0]                   grp14_rtt_swe_data,
   input      logic [7:0]                    grp14_rtt_swe_ext,
   output     logic                          grp14_rtt_swe_prdcr_en,
   input      logic                          grp15_rtt_swe_val,
   input      logic [32:0]                   grp15_rtt_swe_data,
   input      logic [7:0]                    grp15_rtt_swe_ext,
   output     logic                          grp15_rtt_swe_prdcr_en,
   input      logic                          grp16_rtt_swe_val,
   input      logic [32:0]                   grp16_rtt_swe_data,
   input      logic [7:0]                    grp16_rtt_swe_ext,
   output     logic                          grp16_rtt_swe_prdcr_en,
  //ARC_Trace
  // CoreSight interface global signals
  input      logic                          at_clk_en,
  input      logic                          at_rst_an,
  input      logic [63:0]                   atb_cstimestamp,
  // CoreSight interface of L2 core or L1 core in case of NPU HAS NO L2ARC
  input      logic                          atready,
  output     logic [64-1:0]     atdata,
  output     logic [3-1:0]      atbytes,
  output     logic [6:0]                    atid,
  output     logic                          atvalid,
  input      logic                          afvalid,
  output     logic                          afready,
  input      logic                          syncreq,
  // CoreSight interface of NPU Slices
  input      logic                          swe_atready,
  output     logic [64-1:0] swe_atdata,
  output     logic [3-1:0]  swe_atbytes,
  output     logic [6:0]                    swe_atid,
  output     logic                          swe_atvalid,
  input      logic                          swe_afvalid,
  output     logic                          swe_afready,
  input      logic                          swe_syncreq,
  // CTI signalling
  output     logic [25:0]                   cti_rtt_filters,
  input      logic                          cti_trace_start,
  input      logic                          cti_trace_stop,


  // APB Interface to ARC_Trace
  `APBASYNCTGT(16,32,arct_syn_),
  input      logic                          arct_dbgen,
  input      logic                          arct_niden,


  // Shared signals for APB Interface to ARC_Trace and to L2 debug port
  input      logic                          arct_dbg_prot_sel,
  input      logic                          arct_rst_an,


  input      logic                          nl2arc0_dbgen,
  input      logic                          nl2arc0_niden,
  `APBASYNCTGT(16,32,nl2arc0_),
  input      logic                          nl2arc1_dbgen,
  input      logic                          nl2arc1_niden,
  `APBASYNCTGT(16,32,nl2arc1_),

  // Software trace events
  input      logic                          sl0_rtt_swe_val,
  input      logic [32:0]                   sl0_rtt_swe_data,
  input      logic [7:0]                    sl0_rtt_swe_ext,
  input      logic                          sl1_rtt_swe_val,
  input      logic [32:0]                   sl1_rtt_swe_data,
  input      logic [7:0]                    sl1_rtt_swe_ext,
  input      logic                          sl2_rtt_swe_val,
  input      logic [32:0]                   sl2_rtt_swe_data,
  input      logic [7:0]                    sl2_rtt_swe_ext,
  input      logic                          sl3_rtt_swe_val,
  input      logic [32:0]                   sl3_rtt_swe_data,
  input      logic [7:0]                    sl3_rtt_swe_ext,
  input      logic                          sl4_rtt_swe_val,
  input      logic [32:0]                   sl4_rtt_swe_data,
  input      logic [7:0]                    sl4_rtt_swe_ext,
  input      logic                          sl5_rtt_swe_val,
  input      logic [32:0]                   sl5_rtt_swe_data,
  input      logic [7:0]                    sl5_rtt_swe_ext,
  input      logic                          sl6_rtt_swe_val,
  input      logic [32:0]                   sl6_rtt_swe_data,
  input      logic [7:0]                    sl6_rtt_swe_ext,
  input      logic                          sl7_rtt_swe_val,
  input      logic [32:0]                   sl7_rtt_swe_data,
  input      logic [7:0]                    sl7_rtt_swe_ext,
  input      logic                          sl8_rtt_swe_val,
  input      logic [32:0]                   sl8_rtt_swe_data,
  input      logic [7:0]                    sl8_rtt_swe_ext,
  input      logic                          sl9_rtt_swe_val,
  input      logic [32:0]                   sl9_rtt_swe_data,
  input      logic [7:0]                    sl9_rtt_swe_ext,
  input      logic                          sl10_rtt_swe_val,
  input      logic [32:0]                   sl10_rtt_swe_data,
  input      logic [7:0]                    sl10_rtt_swe_ext,
  input      logic                          sl11_rtt_swe_val,
  input      logic [32:0]                   sl11_rtt_swe_data,
  input      logic [7:0]                    sl11_rtt_swe_ext,
  input      logic                          sl12_rtt_swe_val,
  input      logic [32:0]                   sl12_rtt_swe_data,
  input      logic [7:0]                    sl12_rtt_swe_ext,
  input      logic                          sl13_rtt_swe_val,
  input      logic [32:0]                   sl13_rtt_swe_data,
  input      logic [7:0]                    sl13_rtt_swe_ext,
  input      logic                          sl14_rtt_swe_val,
  input      logic [32:0]                   sl14_rtt_swe_data,
  input      logic [7:0]                    sl14_rtt_swe_ext,
  input      logic                          sl15_rtt_swe_val,
  input      logic [32:0]                   sl15_rtt_swe_data,
  input      logic [7:0]                    sl15_rtt_swe_ext,

  input      logic                          nl2arc0_wdt_clk              ,
  output     logic                          nl2arc0_wdt_reset_error    ,
  output     logic                          nl2arc0_wdt_reset_wdt_clk_error  ,
  input      logic                          nl2arc1_wdt_clk              ,
  output     logic                          nl2arc1_wdt_reset_error    ,
  output     logic                          nl2arc1_wdt_reset_wdt_clk_error  ,
  output logic                               grp0_scm_dbank_sbe,
  output logic                               grp0_scm_dbank_dbe,
  output logic                               grp1_scm_dbank_sbe,
  output logic                               grp1_scm_dbank_dbe,
  output logic                               grp2_scm_dbank_sbe,
  output logic                               grp2_scm_dbank_dbe,
  output logic                               grp3_scm_dbank_sbe,
  output logic                               grp3_scm_dbank_dbe,
  //L2 ARC0 memory ECC error signal
  output logic                               nl2arc0_ecc_sbe,
  output logic                               nl2arc0_ecc_dbe,
  output logic                               nl2arc1_ecc_sbe,
  output logic                               nl2arc1_ecc_dbe,
  input      logic [7:0]                     clusternum,
  input      logic                           test_mode
);
 
  localparam int L2MIDW = 1+$clog2(`NPU_NUM_SLC_PER_GRP + `NPU_NUM_STU_PER_GRP) - $clog2(`NPU_AXI_TARGETS+1);
  localparam int L2IDW  = L2MIDW+$clog2(`NPU_AXI_TARGETS+1);
  localparam int CCMIDW = 1;

  logic grp_g1n0_pwr_dwn_a;
  logic grp_g2n1_pwr_dwn_a;
  logic grp_g3n2_pwr_dwn_a;
  logic grp_g0n0_pwr_dwn_a;
  logic grp_g3n1_pwr_dwn_a;
  logic grp_g2n2_pwr_dwn_a;
  logic grp_g3n0_pwr_dwn_a;
  logic grp_g0n1_pwr_dwn_a;
  logic grp_g1n2_pwr_dwn_a;
  logic grp_g2n0_pwr_dwn_a;
  logic grp_g1n1_pwr_dwn_a;
  logic grp_g0n2_pwr_dwn_a;

  // Per group config interface
  // ARC_Trace
  logic                          grp0_rtt_swe_val;
  logic [32:0]                   grp0_rtt_swe_data;
  logic [7:0]                    grp0_rtt_swe_ext;
  logic                          grp0_rtt_swe_prdcr_en;
  logic                          grp1_rtt_swe_val;
  logic [32:0]                   grp1_rtt_swe_data;
  logic [7:0]                    grp1_rtt_swe_ext;
  logic                          grp1_rtt_swe_prdcr_en;
  logic                          grp2_rtt_swe_val;
  logic [32:0]                   grp2_rtt_swe_data;
  logic [7:0]                    grp2_rtt_swe_ext;
  logic                          grp2_rtt_swe_prdcr_en;
  logic                          grp3_rtt_swe_val;
  logic [32:0]                   grp3_rtt_swe_data;
  logic [7:0]                    grp3_rtt_swe_ext;
  logic                          grp3_rtt_swe_prdcr_en;

  logic [`NPU_NUM_GRP-1:0]             scm_dbank_ecc_irq;


   `AXISYNCWIRES(1,32,1,1,1,1,1,0,0,0,0,0,axi_cfg_grp0_sync_);
   `AXISYNCWIRES(1,32,1,1,1,1,1,0,0,0,0,0,axi_cfg_grp1_sync_);
   `AXISYNCWIRES(1,32,1,1,1,1,1,0,0,0,0,0,axi_cfg_grp2_sync_);
   `AXISYNCWIRES(1,32,1,1,1,1,1,0,0,0,0,0,axi_cfg_grp3_sync_);
  // L2ARC interfaces
   `AXISYNCWIRES(CCMIDW,64,SLICE_MMIO_AWUW,SLICE_MMIO_WUW,SLICE_MMIO_BUW,SLICE_MMIO_ARUW,SLICE_MMIO_RUW,0,0,0,0,0,axi_ccm0_sync_);
   `AXISYNCWIRES(L2IDW,VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_mst0_sync_);
   `AXISYNCWIRES(CCMIDW,64,SLICE_MMIO_AWUW,SLICE_MMIO_WUW,SLICE_MMIO_BUW,SLICE_MMIO_ARUW,SLICE_MMIO_RUW,0,0,0,0,0,axi_ccm1_sync_);
   `AXISYNCWIRES(L2IDW,VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_mst1_sync_);
   `AXISYNCWIRES(CCMIDW,64,SLICE_MMIO_AWUW,SLICE_MMIO_WUW,SLICE_MMIO_BUW,SLICE_MMIO_ARUW,SLICE_MMIO_RUW,0,0,0,0,0,axi_ccm2_sync_);
   `AXISYNCWIRES(L2IDW,VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_mst2_sync_);
   `AXISYNCWIRES(CCMIDW,64,SLICE_MMIO_AWUW,SLICE_MMIO_WUW,SLICE_MMIO_BUW,SLICE_MMIO_ARUW,SLICE_MMIO_RUW,0,0,0,0,0,axi_ccm3_sync_);
   `AXISYNCWIRES(L2IDW,VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_mst3_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g0n0_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g0n0_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g0n1_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g0n1_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g0n2_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g0n2_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g1n0_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g1n0_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g1n1_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g1n1_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g1n2_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g1n2_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g2n0_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g2n0_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g2n1_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g2n1_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g2n2_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g2n2_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g3n0_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g3n0_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g3n1_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g3n1_sync_);
  // egress links to from groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_egress_g3n2_sync_);
  // ingress links from other groups
   `AXISYNCWIRES(1+$clog2(6),VSIZE*64,SLICE_DMA_AWUW,SLICE_DMA_WUW,SLICE_DMA_BUW,SLICE_DMA_ARUW,SLICE_DMA_RUW,0,1,0,0,1,axi_ingress_g3n2_sync_);

  // STU events and interrupts
  logic [`NPU_STU_CHAN_NUM-1:0]           stu_done_evt;
  logic [`NPU_STU_CHAN_NUM-1:0]           stu_issue_evt;
  logic [`NPU_STU_CHAN_NUM-1:0]           stu_done_irq_a;

  logic [1:0]  pt0_idx_a;
  assign       pt0_idx_a = 2'd0;
  npu_group
  #(
    .NUMSLC ( `NPU_NUM_SLC_PER_GRP        ),
    .NUMSTU ( `NPU_NUM_STU_PER_GRP        ),
    .NUMGRP ( `MAXGRP                     ),
    .DEVIDW ( 1                    ),
    .LNKIDW ( 1+$clog2(6)   ),
    .L2IDW  ( L2IDW                       ),
    .CCMIDW ( CCMIDW                      ),
    .NOCIDW ( 5                           ),
    .TOP_CFG_DECBASE_RST_VAL  (`CLN_GRP0_TOP_CFG_DECBASE_RST_VAL),
    .TOP_CFG_DECSIZE_RST_VAL  (`CLN_GRP0_TOP_CFG_DECSIZE_RST_VAL),
    .TOP_CFG_DECMST_RST_VAL   (`CLN_GRP0_TOP_CFG_DECMST_RST_VAL),
    .BOT_CFG_DECBASE_RST_VAL  (`CLN_GRP0_BOT_CFG_DECBASE_RST_VAL),
    .BOT_CFG_DECSIZE_RST_VAL  (`CLN_GRP0_BOT_CFG_DECSIZE_RST_VAL),
    .BOT_CFG_DECMST_RST_VAL   (`CLN_GRP0_BOT_CFG_DECMST_RST_VAL),
    .CCM_CFG_DECBASE_RST_VAL  (`CLN_GRP0_CCM_CFG_DECBASE_RST_VAL),
    .CCM_CFG_DECSIZE_RST_VAL  (`CLN_GRP0_CCM_CFG_DECSIZE_RST_VAL),
    .CCM_CFG_DECMST_RST_VAL   (`CLN_GRP0_CCM_CFG_DECMST_RST_VAL),
    .REMP_CFG_DECBASE_RST_VAL (`CLN_GRP0_REMP_CFG_DECBASE_RST_VAL),
    .REMP_CFG_DECSIZE_RST_VAL (`CLN_GRP0_REMP_CFG_DECSIZE_RST_VAL),
    .REMP_CFG_DECMST_RST_VAL  (`CLN_GRP0_REMP_CFG_DECMST_RST_VAL)
  )
  u_npu_group0
  (
    .grp_clk                                 ( npu_core_clk             ),
    .grp_clk_en_a                            ( grp0_clk_en_a         ),
    .grp_rst_a                               ( grp0_rst_a            ),
    .test_mode                               ( test_mode                ),
    .ptidx_a                                 ( pt0_idx_a             ),
    .sl0_rtt_swe_val                      ( sl0_rtt_swe_val ),
    .sl0_rtt_swe_data                     ( sl0_rtt_swe_data),
    .sl0_rtt_swe_ext                      ( sl0_rtt_swe_ext ),
    .sl1_rtt_swe_val                      ( sl1_rtt_swe_val ),
    .sl1_rtt_swe_data                     ( sl1_rtt_swe_data),
    .sl1_rtt_swe_ext                      ( sl1_rtt_swe_ext ),
    .sl2_rtt_swe_val                      ( sl2_rtt_swe_val ),
    .sl2_rtt_swe_data                     ( sl2_rtt_swe_data),
    .sl2_rtt_swe_ext                      ( sl2_rtt_swe_ext ),
    .sl3_rtt_swe_val                      ( sl3_rtt_swe_val ),
    .sl3_rtt_swe_data                     ( sl3_rtt_swe_data),
    .sl3_rtt_swe_ext                      ( sl3_rtt_swe_ext ),
    .rtt_swe_val                             ( grp0_rtt_swe_val      ),
    .rtt_swe_data                            ( grp0_rtt_swe_data     ),
    .rtt_swe_ext                             ( grp0_rtt_swe_ext      ),
    .rtt_swe_prdcr_en                        ( grp0_rtt_swe_prdcr_en ),
    .grp_pwr_dwn_a                           ( grp0_pwr_dwn_a        ),
    .slice0_pwr_dwn_a                     ( sl0nl1arc_pwr_dwn_a ),
    .slice1_pwr_dwn_a                     ( sl1nl1arc_pwr_dwn_a ),
    .slice2_pwr_dwn_a                     ( sl2nl1arc_pwr_dwn_a ),
    .slice3_pwr_dwn_a                     ( sl3nl1arc_pwr_dwn_a ),
    .grp_isolate                             ( grp0_isolate          ),
    .grp_isolate_n                           ( grp0_isolate_n        ),
    .grp_pd_mem                              ( grp0_pd_mem           ),
    .grp_pd_logic                            ( grp0_pd_logic         ),
    .vmid                                    ( npu_grp0_vmid         ), 
    `AXIASYNCSSUB(sl0_dev_axi_gals_,sl0nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl0_ccm_axi_gals_,sl0nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl1_dev_axi_gals_,sl1nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl1_ccm_axi_gals_,sl1nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl2_dev_axi_gals_,sl2nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl2_ccm_axi_gals_,sl2nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl3_dev_axi_gals_,sl3nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl3_ccm_axi_gals_,sl3nl1arc_ccm_axi_gals_),
    `AXIASYNCMSUB(npu_grp_noc_axi_gals_,npu_grp0_noc_axi_gals_),
    .scm_dbank_ecc_irq                       ( scm_dbank_ecc_irq[0] ),
    .scm_dbank_sbe                           ( grp0_scm_dbank_sbe ),
    .scm_dbank_dbe                           ( grp0_scm_dbank_dbe ),
    `AXISYNCINST(axi_cfg_grp_sync_,axi_cfg_grp0_sync_),
    `AXISYNCINST(axi_mst_sync_,axi_mst0_sync_),
    `AXISYNCINST(axi_ccm_sync_,axi_ccm0_sync_),
    `AXISYNCINST(axi_egress0_sync_,axi_egress_g0n0_sync_),
    `AXISYNCINST(axi_ingress0_sync_,axi_ingress_g0n0_sync_),
    .inter_grp_0_pwr_dwn_a                ( grp_g0n0_pwr_dwn_a ),
    `AXISYNCINST(axi_egress1_sync_,axi_egress_g0n1_sync_),
    `AXISYNCINST(axi_ingress1_sync_,axi_ingress_g0n1_sync_),
    .inter_grp_1_pwr_dwn_a                ( grp_g0n1_pwr_dwn_a ),
    `AXISYNCINST(axi_egress2_sync_,axi_egress_g0n2_sync_),
    `AXISYNCINST(axi_ingress2_sync_,axi_ingress_g0n2_sync_),
    .inter_grp_2_pwr_dwn_a                ( grp_g0n2_pwr_dwn_a ),
    .stu_done_evt   (stu_done_evt[0*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_issue_evt  (stu_issue_evt[0*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_done_irq_a (stu_done_irq_a[0*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_err_irq_a  (stu_err_irq_a[0*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP])
  );

  logic [1:0]  pt1_idx_a;
  assign       pt1_idx_a = 2'd1;
  npu_group
  #(
    .NUMSLC ( `NPU_NUM_SLC_PER_GRP        ),
    .NUMSTU ( `NPU_NUM_STU_PER_GRP        ),
    .NUMGRP ( `MAXGRP                     ),
    .DEVIDW ( 1                    ),
    .LNKIDW ( 1+$clog2(6)   ),
    .L2IDW  ( L2IDW                       ),
    .CCMIDW ( CCMIDW                      ),
    .NOCIDW ( 5                           ),
    .TOP_CFG_DECBASE_RST_VAL  (`CLN_GRP1_TOP_CFG_DECBASE_RST_VAL),
    .TOP_CFG_DECSIZE_RST_VAL  (`CLN_GRP1_TOP_CFG_DECSIZE_RST_VAL),
    .TOP_CFG_DECMST_RST_VAL   (`CLN_GRP1_TOP_CFG_DECMST_RST_VAL),
    .BOT_CFG_DECBASE_RST_VAL  (`CLN_GRP1_BOT_CFG_DECBASE_RST_VAL),
    .BOT_CFG_DECSIZE_RST_VAL  (`CLN_GRP1_BOT_CFG_DECSIZE_RST_VAL),
    .BOT_CFG_DECMST_RST_VAL   (`CLN_GRP1_BOT_CFG_DECMST_RST_VAL),
    .CCM_CFG_DECBASE_RST_VAL  (`CLN_GRP1_CCM_CFG_DECBASE_RST_VAL),
    .CCM_CFG_DECSIZE_RST_VAL  (`CLN_GRP1_CCM_CFG_DECSIZE_RST_VAL),
    .CCM_CFG_DECMST_RST_VAL   (`CLN_GRP1_CCM_CFG_DECMST_RST_VAL),
    .REMP_CFG_DECBASE_RST_VAL (`CLN_GRP1_REMP_CFG_DECBASE_RST_VAL),
    .REMP_CFG_DECSIZE_RST_VAL (`CLN_GRP1_REMP_CFG_DECSIZE_RST_VAL),
    .REMP_CFG_DECMST_RST_VAL  (`CLN_GRP1_REMP_CFG_DECMST_RST_VAL)
  )
  u_npu_group1
  (
    .grp_clk                                 ( npu_core_clk             ),
    .grp_clk_en_a                            ( grp1_clk_en_a         ),
    .grp_rst_a                               ( grp1_rst_a            ),
    .test_mode                               ( test_mode                ),
    .ptidx_a                                 ( pt1_idx_a             ),
    .sl0_rtt_swe_val                      ( sl4_rtt_swe_val ),
    .sl0_rtt_swe_data                     ( sl4_rtt_swe_data),
    .sl0_rtt_swe_ext                      ( sl4_rtt_swe_ext ),
    .sl1_rtt_swe_val                      ( sl5_rtt_swe_val ),
    .sl1_rtt_swe_data                     ( sl5_rtt_swe_data),
    .sl1_rtt_swe_ext                      ( sl5_rtt_swe_ext ),
    .sl2_rtt_swe_val                      ( sl6_rtt_swe_val ),
    .sl2_rtt_swe_data                     ( sl6_rtt_swe_data),
    .sl2_rtt_swe_ext                      ( sl6_rtt_swe_ext ),
    .sl3_rtt_swe_val                      ( sl7_rtt_swe_val ),
    .sl3_rtt_swe_data                     ( sl7_rtt_swe_data),
    .sl3_rtt_swe_ext                      ( sl7_rtt_swe_ext ),
    .rtt_swe_val                             ( grp1_rtt_swe_val      ),
    .rtt_swe_data                            ( grp1_rtt_swe_data     ),
    .rtt_swe_ext                             ( grp1_rtt_swe_ext      ),
    .rtt_swe_prdcr_en                        ( grp1_rtt_swe_prdcr_en ),
    .grp_pwr_dwn_a                           ( grp1_pwr_dwn_a        ),
    .slice0_pwr_dwn_a                     ( sl4nl1arc_pwr_dwn_a ),
    .slice1_pwr_dwn_a                     ( sl5nl1arc_pwr_dwn_a ),
    .slice2_pwr_dwn_a                     ( sl6nl1arc_pwr_dwn_a ),
    .slice3_pwr_dwn_a                     ( sl7nl1arc_pwr_dwn_a ),
    .grp_isolate                             ( grp1_isolate          ),
    .grp_isolate_n                           ( grp1_isolate_n        ),
    .grp_pd_mem                              ( grp1_pd_mem           ),
    .grp_pd_logic                            ( grp1_pd_logic         ),
    .vmid                                    ( npu_grp1_vmid         ), 
    `AXIASYNCSSUB(sl0_dev_axi_gals_,sl4nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl0_ccm_axi_gals_,sl4nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl1_dev_axi_gals_,sl5nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl1_ccm_axi_gals_,sl5nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl2_dev_axi_gals_,sl6nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl2_ccm_axi_gals_,sl6nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl3_dev_axi_gals_,sl7nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl3_ccm_axi_gals_,sl7nl1arc_ccm_axi_gals_),
    `AXIASYNCMSUB(npu_grp_noc_axi_gals_,npu_grp1_noc_axi_gals_),
    .scm_dbank_ecc_irq                       ( scm_dbank_ecc_irq[1] ),
    .scm_dbank_sbe                           ( grp1_scm_dbank_sbe ),
    .scm_dbank_dbe                           ( grp1_scm_dbank_dbe ),
    `AXISYNCINST(axi_cfg_grp_sync_,axi_cfg_grp1_sync_),
    `AXISYNCINST(axi_mst_sync_,axi_mst1_sync_),
    `AXISYNCINST(axi_ccm_sync_,axi_ccm1_sync_),
    `AXISYNCINST(axi_egress0_sync_,axi_egress_g1n0_sync_),
    `AXISYNCINST(axi_ingress0_sync_,axi_ingress_g1n0_sync_),
    .inter_grp_0_pwr_dwn_a                ( grp_g1n0_pwr_dwn_a ),
    `AXISYNCINST(axi_egress1_sync_,axi_egress_g1n1_sync_),
    `AXISYNCINST(axi_ingress1_sync_,axi_ingress_g1n1_sync_),
    .inter_grp_1_pwr_dwn_a                ( grp_g1n1_pwr_dwn_a ),
    `AXISYNCINST(axi_egress2_sync_,axi_egress_g1n2_sync_),
    `AXISYNCINST(axi_ingress2_sync_,axi_ingress_g1n2_sync_),
    .inter_grp_2_pwr_dwn_a                ( grp_g1n2_pwr_dwn_a ),
    .stu_done_evt   (stu_done_evt[1*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_issue_evt  (stu_issue_evt[1*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_done_irq_a (stu_done_irq_a[1*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_err_irq_a  (stu_err_irq_a[1*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP])
  );

  logic [1:0]  pt2_idx_a;
  assign       pt2_idx_a = 2'd2;
  npu_group
  #(
    .NUMSLC ( `NPU_NUM_SLC_PER_GRP        ),
    .NUMSTU ( `NPU_NUM_STU_PER_GRP        ),
    .NUMGRP ( `MAXGRP                     ),
    .DEVIDW ( 1                    ),
    .LNKIDW ( 1+$clog2(6)   ),
    .L2IDW  ( L2IDW                       ),
    .CCMIDW ( CCMIDW                      ),
    .NOCIDW ( 5                           ),
    .TOP_CFG_DECBASE_RST_VAL  (`CLN_GRP2_TOP_CFG_DECBASE_RST_VAL),
    .TOP_CFG_DECSIZE_RST_VAL  (`CLN_GRP2_TOP_CFG_DECSIZE_RST_VAL),
    .TOP_CFG_DECMST_RST_VAL   (`CLN_GRP2_TOP_CFG_DECMST_RST_VAL),
    .BOT_CFG_DECBASE_RST_VAL  (`CLN_GRP2_BOT_CFG_DECBASE_RST_VAL),
    .BOT_CFG_DECSIZE_RST_VAL  (`CLN_GRP2_BOT_CFG_DECSIZE_RST_VAL),
    .BOT_CFG_DECMST_RST_VAL   (`CLN_GRP2_BOT_CFG_DECMST_RST_VAL),
    .CCM_CFG_DECBASE_RST_VAL  (`CLN_GRP2_CCM_CFG_DECBASE_RST_VAL),
    .CCM_CFG_DECSIZE_RST_VAL  (`CLN_GRP2_CCM_CFG_DECSIZE_RST_VAL),
    .CCM_CFG_DECMST_RST_VAL   (`CLN_GRP2_CCM_CFG_DECMST_RST_VAL),
    .REMP_CFG_DECBASE_RST_VAL (`CLN_GRP2_REMP_CFG_DECBASE_RST_VAL),
    .REMP_CFG_DECSIZE_RST_VAL (`CLN_GRP2_REMP_CFG_DECSIZE_RST_VAL),
    .REMP_CFG_DECMST_RST_VAL  (`CLN_GRP2_REMP_CFG_DECMST_RST_VAL)
  )
  u_npu_group2
  (
    .grp_clk                                 ( npu_core_clk             ),
    .grp_clk_en_a                            ( grp2_clk_en_a         ),
    .grp_rst_a                               ( grp2_rst_a            ),
    .test_mode                               ( test_mode                ),
    .ptidx_a                                 ( pt2_idx_a             ),
    .sl0_rtt_swe_val                      ( sl8_rtt_swe_val ),
    .sl0_rtt_swe_data                     ( sl8_rtt_swe_data),
    .sl0_rtt_swe_ext                      ( sl8_rtt_swe_ext ),
    .sl1_rtt_swe_val                      ( sl9_rtt_swe_val ),
    .sl1_rtt_swe_data                     ( sl9_rtt_swe_data),
    .sl1_rtt_swe_ext                      ( sl9_rtt_swe_ext ),
    .sl2_rtt_swe_val                      ( sl10_rtt_swe_val ),
    .sl2_rtt_swe_data                     ( sl10_rtt_swe_data),
    .sl2_rtt_swe_ext                      ( sl10_rtt_swe_ext ),
    .sl3_rtt_swe_val                      ( sl11_rtt_swe_val ),
    .sl3_rtt_swe_data                     ( sl11_rtt_swe_data),
    .sl3_rtt_swe_ext                      ( sl11_rtt_swe_ext ),
    .rtt_swe_val                             ( grp2_rtt_swe_val      ),
    .rtt_swe_data                            ( grp2_rtt_swe_data     ),
    .rtt_swe_ext                             ( grp2_rtt_swe_ext      ),
    .rtt_swe_prdcr_en                        ( grp2_rtt_swe_prdcr_en ),
    .grp_pwr_dwn_a                           ( grp2_pwr_dwn_a        ),
    .slice0_pwr_dwn_a                     ( sl8nl1arc_pwr_dwn_a ),
    .slice1_pwr_dwn_a                     ( sl9nl1arc_pwr_dwn_a ),
    .slice2_pwr_dwn_a                     ( sl10nl1arc_pwr_dwn_a ),
    .slice3_pwr_dwn_a                     ( sl11nl1arc_pwr_dwn_a ),
    .grp_isolate                             ( grp2_isolate          ),
    .grp_isolate_n                           ( grp2_isolate_n        ),
    .grp_pd_mem                              ( grp2_pd_mem           ),
    .grp_pd_logic                            ( grp2_pd_logic         ),
    .vmid                                    ( npu_grp2_vmid         ), 
    `AXIASYNCSSUB(sl0_dev_axi_gals_,sl8nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl0_ccm_axi_gals_,sl8nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl1_dev_axi_gals_,sl9nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl1_ccm_axi_gals_,sl9nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl2_dev_axi_gals_,sl10nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl2_ccm_axi_gals_,sl10nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl3_dev_axi_gals_,sl11nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl3_ccm_axi_gals_,sl11nl1arc_ccm_axi_gals_),
    `AXIASYNCMSUB(npu_grp_noc_axi_gals_,npu_grp2_noc_axi_gals_),
    .scm_dbank_ecc_irq                       ( scm_dbank_ecc_irq[2] ),
    .scm_dbank_sbe                           ( grp2_scm_dbank_sbe ),
    .scm_dbank_dbe                           ( grp2_scm_dbank_dbe ),
    `AXISYNCINST(axi_cfg_grp_sync_,axi_cfg_grp2_sync_),
    `AXISYNCINST(axi_mst_sync_,axi_mst2_sync_),
    `AXISYNCINST(axi_ccm_sync_,axi_ccm2_sync_),
    `AXISYNCINST(axi_egress0_sync_,axi_egress_g2n0_sync_),
    `AXISYNCINST(axi_ingress0_sync_,axi_ingress_g2n0_sync_),
    .inter_grp_0_pwr_dwn_a                ( grp_g2n0_pwr_dwn_a ),
    `AXISYNCINST(axi_egress1_sync_,axi_egress_g2n1_sync_),
    `AXISYNCINST(axi_ingress1_sync_,axi_ingress_g2n1_sync_),
    .inter_grp_1_pwr_dwn_a                ( grp_g2n1_pwr_dwn_a ),
    `AXISYNCINST(axi_egress2_sync_,axi_egress_g2n2_sync_),
    `AXISYNCINST(axi_ingress2_sync_,axi_ingress_g2n2_sync_),
    .inter_grp_2_pwr_dwn_a                ( grp_g2n2_pwr_dwn_a ),
    .stu_done_evt   (stu_done_evt[2*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_issue_evt  (stu_issue_evt[2*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_done_irq_a (stu_done_irq_a[2*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_err_irq_a  (stu_err_irq_a[2*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP])
  );

  logic [1:0]  pt3_idx_a;
  assign       pt3_idx_a = 2'd3;
  npu_group
  #(
    .NUMSLC ( `NPU_NUM_SLC_PER_GRP        ),
    .NUMSTU ( `NPU_NUM_STU_PER_GRP        ),
    .NUMGRP ( `MAXGRP                     ),
    .DEVIDW ( 1                    ),
    .LNKIDW ( 1+$clog2(6)   ),
    .L2IDW  ( L2IDW                       ),
    .CCMIDW ( CCMIDW                      ),
    .NOCIDW ( 5                           ),
    .TOP_CFG_DECBASE_RST_VAL  (`CLN_GRP3_TOP_CFG_DECBASE_RST_VAL),
    .TOP_CFG_DECSIZE_RST_VAL  (`CLN_GRP3_TOP_CFG_DECSIZE_RST_VAL),
    .TOP_CFG_DECMST_RST_VAL   (`CLN_GRP3_TOP_CFG_DECMST_RST_VAL),
    .BOT_CFG_DECBASE_RST_VAL  (`CLN_GRP3_BOT_CFG_DECBASE_RST_VAL),
    .BOT_CFG_DECSIZE_RST_VAL  (`CLN_GRP3_BOT_CFG_DECSIZE_RST_VAL),
    .BOT_CFG_DECMST_RST_VAL   (`CLN_GRP3_BOT_CFG_DECMST_RST_VAL),
    .CCM_CFG_DECBASE_RST_VAL  (`CLN_GRP3_CCM_CFG_DECBASE_RST_VAL),
    .CCM_CFG_DECSIZE_RST_VAL  (`CLN_GRP3_CCM_CFG_DECSIZE_RST_VAL),
    .CCM_CFG_DECMST_RST_VAL   (`CLN_GRP3_CCM_CFG_DECMST_RST_VAL),
    .REMP_CFG_DECBASE_RST_VAL (`CLN_GRP3_REMP_CFG_DECBASE_RST_VAL),
    .REMP_CFG_DECSIZE_RST_VAL (`CLN_GRP3_REMP_CFG_DECSIZE_RST_VAL),
    .REMP_CFG_DECMST_RST_VAL  (`CLN_GRP3_REMP_CFG_DECMST_RST_VAL)
  )
  u_npu_group3
  (
    .grp_clk                                 ( npu_core_clk             ),
    .grp_clk_en_a                            ( grp3_clk_en_a         ),
    .grp_rst_a                               ( grp3_rst_a            ),
    .test_mode                               ( test_mode                ),
    .ptidx_a                                 ( pt3_idx_a             ),
    .sl0_rtt_swe_val                      ( sl12_rtt_swe_val ),
    .sl0_rtt_swe_data                     ( sl12_rtt_swe_data),
    .sl0_rtt_swe_ext                      ( sl12_rtt_swe_ext ),
    .sl1_rtt_swe_val                      ( sl13_rtt_swe_val ),
    .sl1_rtt_swe_data                     ( sl13_rtt_swe_data),
    .sl1_rtt_swe_ext                      ( sl13_rtt_swe_ext ),
    .sl2_rtt_swe_val                      ( sl14_rtt_swe_val ),
    .sl2_rtt_swe_data                     ( sl14_rtt_swe_data),
    .sl2_rtt_swe_ext                      ( sl14_rtt_swe_ext ),
    .sl3_rtt_swe_val                      ( sl15_rtt_swe_val ),
    .sl3_rtt_swe_data                     ( sl15_rtt_swe_data),
    .sl3_rtt_swe_ext                      ( sl15_rtt_swe_ext ),
    .rtt_swe_val                             ( grp3_rtt_swe_val      ),
    .rtt_swe_data                            ( grp3_rtt_swe_data     ),
    .rtt_swe_ext                             ( grp3_rtt_swe_ext      ),
    .rtt_swe_prdcr_en                        ( grp3_rtt_swe_prdcr_en ),
    .grp_pwr_dwn_a                           ( grp3_pwr_dwn_a        ),
    .slice0_pwr_dwn_a                     ( sl12nl1arc_pwr_dwn_a ),
    .slice1_pwr_dwn_a                     ( sl13nl1arc_pwr_dwn_a ),
    .slice2_pwr_dwn_a                     ( sl14nl1arc_pwr_dwn_a ),
    .slice3_pwr_dwn_a                     ( sl15nl1arc_pwr_dwn_a ),
    .grp_isolate                             ( grp3_isolate          ),
    .grp_isolate_n                           ( grp3_isolate_n        ),
    .grp_pd_mem                              ( grp3_pd_mem           ),
    .grp_pd_logic                            ( grp3_pd_logic         ),
    .vmid                                    ( npu_grp3_vmid         ), 
    `AXIASYNCSSUB(sl0_dev_axi_gals_,sl12nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl0_ccm_axi_gals_,sl12nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl1_dev_axi_gals_,sl13nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl1_ccm_axi_gals_,sl13nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl2_dev_axi_gals_,sl14nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl2_ccm_axi_gals_,sl14nl1arc_ccm_axi_gals_),
    `AXIASYNCSSUB(sl3_dev_axi_gals_,sl15nl1arc_dev_axi_gals_),
    `AXIASYNCMSUB(sl3_ccm_axi_gals_,sl15nl1arc_ccm_axi_gals_),
    `AXIASYNCMSUB(npu_grp_noc_axi_gals_,npu_grp3_noc_axi_gals_),
    .scm_dbank_ecc_irq                       ( scm_dbank_ecc_irq[3] ),
    .scm_dbank_sbe                           ( grp3_scm_dbank_sbe ),
    .scm_dbank_dbe                           ( grp3_scm_dbank_dbe ),
    `AXISYNCINST(axi_cfg_grp_sync_,axi_cfg_grp3_sync_),
    `AXISYNCINST(axi_mst_sync_,axi_mst3_sync_),
    `AXISYNCINST(axi_ccm_sync_,axi_ccm3_sync_),
    `AXISYNCINST(axi_egress0_sync_,axi_egress_g3n0_sync_),
    `AXISYNCINST(axi_ingress0_sync_,axi_ingress_g3n0_sync_),
    .inter_grp_0_pwr_dwn_a                ( grp_g3n0_pwr_dwn_a ),
    `AXISYNCINST(axi_egress1_sync_,axi_egress_g3n1_sync_),
    `AXISYNCINST(axi_ingress1_sync_,axi_ingress_g3n1_sync_),
    .inter_grp_1_pwr_dwn_a                ( grp_g3n1_pwr_dwn_a ),
    `AXISYNCINST(axi_egress2_sync_,axi_egress_g3n2_sync_),
    `AXISYNCINST(axi_ingress2_sync_,axi_ingress_g3n2_sync_),
    .inter_grp_2_pwr_dwn_a                ( grp_g3n2_pwr_dwn_a ),
    .stu_done_evt   (stu_done_evt[3*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_issue_evt  (stu_issue_evt[3*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_done_irq_a (stu_done_irq_a[3*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP]),
    .stu_err_irq_a  (stu_err_irq_a[3*`NPU_NUM_STU_PER_GRP+:`NPU_NUM_STU_PER_GRP])
  );


  //
  // For each npu partition, in/egress 0 connect horizontal; in/egress 1 connect vertical; in/egress 2 connect to diagonal
  //
  //
  // Transpose egress to ingress, group 00/01/10/11
  // Vertical invert bit 1, horizontal invert bit 0, diagonal invert bit0/1
  //
  assign grp_g1n0_pwr_dwn_a = grp0_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g0n0_sync_,axi_egress_g1n0_sync_);
  assign grp_g2n1_pwr_dwn_a = grp0_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g0n1_sync_,axi_egress_g2n1_sync_);
  assign grp_g3n2_pwr_dwn_a = grp0_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g0n2_sync_,axi_egress_g3n2_sync_);
  assign grp_g0n0_pwr_dwn_a = grp1_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g1n0_sync_,axi_egress_g0n0_sync_);
  assign grp_g3n1_pwr_dwn_a = grp1_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g1n1_sync_,axi_egress_g3n1_sync_);
  assign grp_g2n2_pwr_dwn_a = grp1_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g1n2_sync_,axi_egress_g2n2_sync_);
  assign grp_g3n0_pwr_dwn_a = grp2_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g2n0_sync_,axi_egress_g3n0_sync_);
  assign grp_g0n1_pwr_dwn_a = grp2_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g2n1_sync_,axi_egress_g0n1_sync_);
  assign grp_g1n2_pwr_dwn_a = grp2_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g2n2_sync_,axi_egress_g1n2_sync_);
  assign grp_g2n0_pwr_dwn_a = grp3_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g3n0_sync_,axi_egress_g2n0_sync_);
  assign grp_g1n1_pwr_dwn_a = grp3_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g3n1_sync_,axi_egress_g1n1_sync_);
  assign grp_g0n2_pwr_dwn_a = grp3_pwr_dwn_a;
  `AXISYNCASG(axi_ingress_g3n2_sync_,axi_egress_g0n2_sync_);

  logic  nl2arc0_rst_mr;
  assign nl2arc0_rst_mr = (nl2arc0_rst_a || nl2_rst_a);
  logic  nl2arc1_rst_mr;
  assign nl2arc1_rst_mr = (nl2arc1_rst_a || nl2_rst_a);
  //
  // Instantiate L2ARC group
  //
  npu_l2arc_group
  #(
    .NUMGRP ( `NPU_NUM_GRP             ),
    .NUMDMI ( `NPU_AXI_TARGETS         ),
    .NUMSLC ( `NPU_SLICE_NUM           ),
    .NUMSTU ( `NPU_STU_CHAN_NUM        ),
    .CFGIDW ( `NPU_AXI_TARGET_ID_WIDTH ),
    .DMIIDW ( `NPU_AXI_TARGET_ID_WIDTH ),
    .CCMIDW ( CCMIDW                   ),
    .MSTIDW ( L2IDW                    ),
    .L2MIDW ( L2MIDW                   )
  )
  u_l2arc_grp
   (
    .clk                                       ( npu_core_clk                  ),
    .rst_a                                     ( nl2_rst_a                     ),
    .ext_irq0_a                                ( ext_irq0_a                    ),
    .ext_irq1_a                                ( ext_irq1_a                    ),
    .test_mode                                 ( test_mode                     ),
    .grp0_pwr_dwn_a                         ( grp0_pwr_dwn_a             ),
    .grp1_pwr_dwn_a                         ( grp1_pwr_dwn_a             ),
    .grp2_pwr_dwn_a                         ( grp2_pwr_dwn_a             ),
    .grp3_pwr_dwn_a                         ( grp3_pwr_dwn_a             ),
    .nl2arc0_isolate                      ( nl2arc_isolate           ),
    .nl2arc0_isolate_n                    ( nl2arc_isolate_n         ),
    .nl2arc0_pd_mem                       ( nl2arc_pd_mem            ),
    .nl2arc0_pd_logic                     ( nl2arc_pd_logic          ),
    .grp0_evt_vm_irq_a                      ( grp0_evt_vm_irq            ),
    .grp1_evt_vm_irq_a                      ( grp1_evt_vm_irq            ),
    .grp2_evt_vm_irq_a                      ( grp2_evt_vm_irq            ),
    .grp3_evt_vm_irq_a                      ( grp3_evt_vm_irq            ),
    .nl2arc0_rst_a                        ( nl2arc0_rst_mr           ),
    .nl2arc0_clk_en_a                     ( nl2arc0_clk_en_a         ),
    .nl2arc0_evt_vm_irq                   ( nl2arc0_evt_vm_irq       ),
    .nl2arc0_pwr_dwn_a                    ( nl2arc0_pwr_dwn_a        ),

    .nl2arc1_rst_a                        ( nl2arc1_rst_mr           ),
    .nl2arc1_clk_en_a                     ( nl2arc1_clk_en_a         ),
    .nl2arc1_evt_vm_irq                   ( nl2arc1_evt_vm_irq       ),
    .nl2arc1_pwr_dwn_a                    ( nl2arc1_pwr_dwn_a        ),
    `AXISYNCINST(axi_cfg_grp0_sync_,axi_cfg_grp0_sync_),
    `AXISYNCINST(axi_mst0_sync_,axi_mst0_sync_),
    `AXISYNCINST(axi_ccm0_sync_,axi_ccm0_sync_),
    `AXISYNCINST(axi_cfg_grp1_sync_,axi_cfg_grp1_sync_),
    `AXISYNCINST(axi_mst1_sync_,axi_mst1_sync_),
    `AXISYNCINST(axi_ccm1_sync_,axi_ccm1_sync_),
    `AXISYNCINST(axi_cfg_grp2_sync_,axi_cfg_grp2_sync_),
    `AXISYNCINST(axi_mst2_sync_,axi_mst2_sync_),
    `AXISYNCINST(axi_ccm2_sync_,axi_ccm2_sync_),
    `AXISYNCINST(axi_cfg_grp3_sync_,axi_cfg_grp3_sync_),
    `AXISYNCINST(axi_mst3_sync_,axi_mst3_sync_),
    `AXISYNCINST(axi_ccm3_sync_,axi_ccm3_sync_),
    `AXIASYNCMSUB(l2arc_noc_axi_gals_,l2arc_noc_axi_gals_),
    `AXIASYNCSSUB(cfg_axi_gals_,cfg_axi_gals_),
    `AXIASYNCSSUB(dmi0_axi_gals_,dmi0_axi_gals_),
    .dbg_cmdval_a                              ( nl2arc0_dbg_cmdval_a     ),
    .dbg_pack_a                                ( nl2arc0_dbg_pack_a       ),
    .dbg_resp                                  ( nl2arc0_dbg_resp         ),
    .arc1_dbg_cmdval_a                         ( nl2arc1_dbg_cmdval_a     ),
    .arc1_dbg_pack_a                           ( nl2arc1_dbg_pack_a       ),
    .arc1_dbg_resp                             ( nl2arc1_dbg_resp         ),
    .npu_grp0_vmid                          ( npu_grp0_vmid              ),
    .npu_grp1_vmid                          ( npu_grp1_vmid              ),
    .npu_grp2_vmid                          ( npu_grp2_vmid              ),
    .npu_grp3_vmid                          ( npu_grp3_vmid              ),
    //ARC_Trace
    .at_clk_en                                 ( at_clk_en                     ),
    .at_rst_an                                 ( at_rst_an                     ),
    .atb_cstimestamp                           ( atb_cstimestamp               ),
    .atready                                   ( atready                       ),
    .atdata                                    ( atdata                        ),
    .atbytes                                   ( atbytes                       ),
    .atid                                      ( atid                          ),
    .atvalid                                   ( atvalid                       ),
    .afvalid                                   ( afvalid                       ),
    .afready                                   ( afready                       ),
    .syncreq                                   ( syncreq                       ),
    .swe_atready                               ( swe_atready                   ),
    .swe_atdata                                ( swe_atdata                    ),
    .swe_atbytes                               ( swe_atbytes                   ),
    .swe_atid                                  ( swe_atid                      ),
    .swe_atvalid                               ( swe_atvalid                   ),
    .swe_afvalid                               ( swe_afvalid                   ),
    .swe_afready                               ( swe_afready                   ),
    .swe_syncreq                               ( swe_syncreq                   ),
    .cti_rtt_filters                           ( cti_rtt_filters               ),
    .cti_trace_start                           ( cti_trace_start               ),
    .cti_trace_stop                            ( cti_trace_stop                ),
    `APBASYNCINST(arct_,arct_syn_),
    .arct_dbgen                                ( arct_dbgen                    ),
    .arct_niden                                ( arct_niden                    ),
    .arct_dbg_prot_sel                         ( arct_dbg_prot_sel             ),
    .arct_rst_an                               ( arct_rst_an                   ),
    .grp0_rtt_swe_data                      ( grp0_rtt_swe_data          ),
    .grp0_rtt_swe_val                       ( grp0_rtt_swe_val           ),
    .grp0_rtt_swe_ext                       ( grp0_rtt_swe_ext           ),
    .grp0_rtt_swe_prdcr_en                  ( grp0_rtt_swe_prdcr_en      ),
    .grp1_rtt_swe_data                      ( grp1_rtt_swe_data          ),
    .grp1_rtt_swe_val                       ( grp1_rtt_swe_val           ),
    .grp1_rtt_swe_ext                       ( grp1_rtt_swe_ext           ),
    .grp1_rtt_swe_prdcr_en                  ( grp1_rtt_swe_prdcr_en      ),
    .grp2_rtt_swe_data                      ( grp2_rtt_swe_data          ),
    .grp2_rtt_swe_val                       ( grp2_rtt_swe_val           ),
    .grp2_rtt_swe_ext                       ( grp2_rtt_swe_ext           ),
    .grp2_rtt_swe_prdcr_en                  ( grp2_rtt_swe_prdcr_en      ),
    .grp3_rtt_swe_data                      ( grp3_rtt_swe_data          ),
    .grp3_rtt_swe_val                       ( grp3_rtt_swe_val           ),
    .grp3_rtt_swe_ext                       ( grp3_rtt_swe_ext           ),
    .grp3_rtt_swe_prdcr_en                  ( grp3_rtt_swe_prdcr_en      ),
    .grp4_rtt_swe_data                      ( grp4_rtt_swe_data          ),
    .grp4_rtt_swe_val                       ( grp4_rtt_swe_val           ),
    .grp4_rtt_swe_ext                       ( grp4_rtt_swe_ext           ),
    .grp4_rtt_swe_prdcr_en                  ( grp4_rtt_swe_prdcr_en      ),
    .grp5_rtt_swe_data                      ( grp5_rtt_swe_data          ),
    .grp5_rtt_swe_val                       ( grp5_rtt_swe_val           ),
    .grp5_rtt_swe_ext                       ( grp5_rtt_swe_ext           ),
    .grp5_rtt_swe_prdcr_en                  ( grp5_rtt_swe_prdcr_en      ),
    .grp6_rtt_swe_data                      ( grp6_rtt_swe_data          ),
    .grp6_rtt_swe_val                       ( grp6_rtt_swe_val           ),
    .grp6_rtt_swe_ext                       ( grp6_rtt_swe_ext           ),
    .grp6_rtt_swe_prdcr_en                  ( grp6_rtt_swe_prdcr_en      ),
    .grp7_rtt_swe_data                      ( grp7_rtt_swe_data          ),
    .grp7_rtt_swe_val                       ( grp7_rtt_swe_val           ),
    .grp7_rtt_swe_ext                       ( grp7_rtt_swe_ext           ),
    .grp7_rtt_swe_prdcr_en                  ( grp7_rtt_swe_prdcr_en      ),
    .grp8_rtt_swe_data                      ( grp8_rtt_swe_data          ),
    .grp8_rtt_swe_val                       ( grp8_rtt_swe_val           ),
    .grp8_rtt_swe_ext                       ( grp8_rtt_swe_ext           ),
    .grp8_rtt_swe_prdcr_en                  ( grp8_rtt_swe_prdcr_en      ),
    .grp9_rtt_swe_data                      ( grp9_rtt_swe_data          ),
    .grp9_rtt_swe_val                       ( grp9_rtt_swe_val           ),
    .grp9_rtt_swe_ext                       ( grp9_rtt_swe_ext           ),
    .grp9_rtt_swe_prdcr_en                  ( grp9_rtt_swe_prdcr_en      ),
    .grp10_rtt_swe_data                      ( grp10_rtt_swe_data          ),
    .grp10_rtt_swe_val                       ( grp10_rtt_swe_val           ),
    .grp10_rtt_swe_ext                       ( grp10_rtt_swe_ext           ),
    .grp10_rtt_swe_prdcr_en                  ( grp10_rtt_swe_prdcr_en      ),
    .grp11_rtt_swe_data                      ( grp11_rtt_swe_data          ),
    .grp11_rtt_swe_val                       ( grp11_rtt_swe_val           ),
    .grp11_rtt_swe_ext                       ( grp11_rtt_swe_ext           ),
    .grp11_rtt_swe_prdcr_en                  ( grp11_rtt_swe_prdcr_en      ),
    .grp12_rtt_swe_data                      ( grp12_rtt_swe_data          ),
    .grp12_rtt_swe_val                       ( grp12_rtt_swe_val           ),
    .grp12_rtt_swe_ext                       ( grp12_rtt_swe_ext           ),
    .grp12_rtt_swe_prdcr_en                  ( grp12_rtt_swe_prdcr_en      ),
    .grp13_rtt_swe_data                      ( grp13_rtt_swe_data          ),
    .grp13_rtt_swe_val                       ( grp13_rtt_swe_val           ),
    .grp13_rtt_swe_ext                       ( grp13_rtt_swe_ext           ),
    .grp13_rtt_swe_prdcr_en                  ( grp13_rtt_swe_prdcr_en      ),
    .grp14_rtt_swe_data                      ( grp14_rtt_swe_data          ),
    .grp14_rtt_swe_val                       ( grp14_rtt_swe_val           ),
    .grp14_rtt_swe_ext                       ( grp14_rtt_swe_ext           ),
    .grp14_rtt_swe_prdcr_en                  ( grp14_rtt_swe_prdcr_en      ),
    .grp15_rtt_swe_data                      ( grp15_rtt_swe_data          ),
    .grp15_rtt_swe_val                       ( grp15_rtt_swe_val           ),
    .grp15_rtt_swe_ext                       ( grp15_rtt_swe_ext           ),
    .grp15_rtt_swe_prdcr_en                  ( grp15_rtt_swe_prdcr_en      ),
    .grp16_rtt_swe_data                      ( grp16_rtt_swe_data          ),
    .grp16_rtt_swe_val                       ( grp16_rtt_swe_val           ),
    .grp16_rtt_swe_ext                       ( grp16_rtt_swe_ext           ),
    .grp16_rtt_swe_prdcr_en                  ( grp16_rtt_swe_prdcr_en      ),
    `APBASYNCINST(nl2arc0_,nl2arc0_),
    .nl2arc0_dbgen                        ( nl2arc0_dbgen            ),
    .nl2arc0_niden                        ( nl2arc0_niden            ),
    `APBASYNCINST(nl2arc1_,nl2arc1_),
    .nl2arc1_dbgen                        ( nl2arc1_dbgen            ),
    .nl2arc1_niden                        ( nl2arc1_niden            ),
    .scm_dbank_ecc_irq                         ( scm_dbank_ecc_irq ),
    .nl2arc0_ecc_sbe                      ( nl2arc0_ecc_sbe ),
    .nl2arc0_ecc_dbe                      ( nl2arc0_ecc_dbe ),
    .nl2arc1_ecc_sbe                      ( nl2arc1_ecc_sbe ),
    .nl2arc1_ecc_dbe                      ( nl2arc1_ecc_dbe ),
    .wdt_clk                        ( nl2arc0_wdt_clk                   ),
    .arc1_wdt_clk                   ( nl2arc1_wdt_clk                   ),
    .wdt_reset                      ( nl2arc0_wdt_reset_error           ),
    .wdt_reset_wdt_clk              ( nl2arc0_wdt_reset_wdt_clk_error   ),
    .clusternum                     ( clusternum                    ),
    .arcnum                         ( nl2arc0_arcnum           ),
    .intvbase_in                    ( nl2arc0_intvbase_in      ),
    .arc_halt_req_a                 ( nl2arc0_arc_halt_req_a   ),
    .arc_halt_ack                   ( nl2arc0_arc_halt_ack     ),
    .arc_run_req_a                  ( nl2arc0_arc_run_req_a    ),
    .arc_run_ack                    ( nl2arc0_arc_run_ack      ),
    .sys_sleep_r                    ( nl2arc0_sys_sleep_r      ),
    .sys_sleep_mode_r               ( nl2arc0_sys_sleep_mode_r ),
    .sys_halt_r                     ( nl2arc0_sys_halt_r       ),
    .sys_tf_halt_r                  ( nl2arc0_sys_tf_halt_r    ),
    .arcsync_irq_a                  ( nl2arc0_arc_irq_a        ),
    .arcsync_event_a                ( nl2arc0_arc_event_a      ),
    .arc1_wdt_reset                 ( nl2arc1_wdt_reset_error         ),
    .arc1_wdt_reset_wdt_clk         ( nl2arc1_wdt_reset_wdt_clk_error ),
    .arc1_clusternum                ( clusternum                    ),
    .arc1_arcnum                    ( nl2arc1_arcnum           ),
    .arc1_intvbase_in               ( nl2arc1_intvbase_in      ),
    .arc1_arc_halt_req_a            ( nl2arc1_arc_halt_req_a   ),
    .arc1_arc_halt_ack              ( nl2arc1_arc_halt_ack     ),
    .arc1_arc_run_req_a             ( nl2arc1_arc_run_req_a    ),
    .arc1_arc_run_ack               ( nl2arc1_arc_run_ack      ),
    .arc1_sys_sleep_r               ( nl2arc1_sys_sleep_r      ),
    .arc1_sys_sleep_mode_r          ( nl2arc1_sys_sleep_mode_r ),
    .arc1_sys_halt_r                ( nl2arc1_sys_halt_r       ),
    .arc1_sys_tf_halt_r             ( nl2arc1_sys_tf_halt_r    ),
    .arc1_arcsync_irq_a             ( nl2arc1_arc_irq_a        ),
    .arc1_arcsync_event_a           ( nl2arc1_arc_event_a      ),
    .stu_done_evt                   ( stu_done_evt                  ),
    .stu_issue_evt                  ( stu_issue_evt                 ),
    .stu_done_irq_a                 ( stu_done_irq_a                ),
    .child_events_a                 ( l1_to_l2_event                ),
    .parent_events                  ( l2_to_l1_event                ),
    .npu_csm_base                   ( npu_csm_base                  )
    );

endmodule : npu_core_pd
